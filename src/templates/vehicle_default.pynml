<!--! this is the default template for trains that don't supply their own template -->

<tal:include metal:use-macro="load: spriteset_templates.pynml" />

<tal:reversible_variants repeat="reversed_variant consist.reversed_variants">
    spriteset(${vehicle.id}_ss_${reversed_variant}, "${global_constants.graphics_path}${consist.id}.png") {
      spriteset_template_${reversed_variant}_${vehicle.id}(10 + ${vehicle.spriterow_num * 30})
    }

    spritegroup ${vehicle.id}_sg_${reversed_variant} {
        loaded:  [
            ${vehicle.id}_ss_${reversed_variant},
        ];
        loading: [
            ${vehicle.id}_ss_${reversed_variant},
        ];
    }
    // always include a switch to get to spritegroups even if it does nothing - the random switches need to route to it
    switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics_${reversed_variant}, 0) {
        0: return ${vehicle.id}_sg_${reversed_variant};
        return ${vehicle.id}_sg_${reversed_variant};
    }
</tal:reversible_variants>

<tal:include metal:use-macro="load: graphics_switches.pynml" />

// buy menu graphics
spriteset(${vehicle.id}_ss_purchase, "${global_constants.graphics_path}${consist.id}.png") {
  spriteset_template_purchase_${vehicle.id}(10)
}

spritegroup ${vehicle.id}_sg_purchase {
    loaded:  [
        ${vehicle.id}_ss_purchase,
    ];
    loading: [
        ${vehicle.id}_ss_purchase,
    ];
}

// purchase sprites always go through a switch in case the template does anything specific for purchase graphics
// if there's nothing specific, then this should just be a null switch
switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics_purchase, 0) {
    return ${vehicle.id}_sg_purchase;
}

<tal:optional_capacity_switches condition="vehicle.has_cargo_capacity">
    <tal:include metal:use-macro="load: capacity_switches.pynml" />
</tal:optional_capacity_switches>

<tal:include metal:use-macro="load: properties.pynml" />

