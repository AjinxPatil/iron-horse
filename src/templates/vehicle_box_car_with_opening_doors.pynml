<!--! box cars that have doors closed when empty / loaded, and doors open when loading -->

<tal:include metal:use-macro="load: spriteset_templates.pynml" />

<!--! 'reversed' is random reversal on construction, depending on vehicle random bits
      'flipped' is user flipping vehicle in depot
      don't conflate them :) -->
// default graphics chain
<tal:reversible_variants repeat="reversed_variant consist.reversed_variants">
    <tal:user_flipped repeat="flipped ['unflipped', 'flipped']">
        spriteset(${vehicle.id}_ss_${reversed_variant}_doors_closed_${flipped}, "${global_constants.graphics_path}${consist.id}.png") {
          spriteset_template_${vehicle.symmetry_type}_${reversed_variant}_${vehicle.id}_${flipped}(10 + ${vehicle.spriterow_num * 30})
        }
        spriteset(${vehicle.id}_ss_${reversed_variant}_doors_open_${flipped}, "${global_constants.graphics_path}${consist.id}.png") {
          spriteset_template_${vehicle.symmetry_type}_${reversed_variant}_${vehicle.id}_${flipped}(10 + ${vehicle.spriterow_num * 30} + 30)
        }

        spritegroup ${vehicle.id}_sg_${reversed_variant}_${flipped} {
            loaded:  [
                ${vehicle.id}_ss_${reversed_variant}_doors_closed_${flipped},
            ];
            loading: [
                ${vehicle.id}_ss_${reversed_variant}_doors_open_${flipped},
            ];
        }
    </tal:user_flipped>
    // handle user flipped state
    switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics_${reversed_variant}, vehicle_is_flipped) {
        1: return ${vehicle.id}_sg_${reversed_variant}_flipped;
        return ${vehicle.id}_sg_${reversed_variant}_unflipped;
    }
</tal:reversible_variants>

<tal:include metal:use-macro="load: graphics_switches.pynml" />

// buy menu graphics chain
spriteset(${vehicle.id}_ss_purchase, "${global_constants.graphics_path}${consist.id}.png") {
  spriteset_template_purchase_${vehicle.id}(10)
}

spritegroup ${vehicle.id}_sg_purchase {
    loaded:  [
        ${vehicle.id}_ss_purchase,
    ];
    loading: [
        ${vehicle.id}_ss_purchase,
    ];
}

<!--! purchase sprites always go through a switch in case the template does anything specific for purchase graphics
      if there was nothing specific, then this would just be a null switch, but in this case we switch to the livery for (default) cargo -->
switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics_purchase, 0) {
    return ${vehicle.id}_sg_purchase;
}

<tal:optional_capacity_switches condition="vehicle.has_cargo_capacity">
    <tal:include metal:use-macro="load: capacity_switches.pynml" />
</tal:optional_capacity_switches>

<tal:include metal:use-macro="load: properties.pynml" />

