// default spriteset templates
<!--! 'reversed' is random reversal on construction, depending on vehicle random bits
      'flipped' is user flipping vehicle in depot
      don't conflate them :) -->
<tal:user_flipped repeat="flipped [(False, 'unflipped'), (True, 'flipped')]">
    <tal:asymmetric condition="vehicle.symmetry_type == 'asymmetric'">
        template spriteset_template_asymmetric_unreversed_${vehicle.id}_${flipped[1]}(y) {
                //[left_x, upper_y, width, height, offset_x, offset_y]
            <tal:sprite repeat="bounding_box global_constants.spritesheet_bounding_boxes_asymmetric_unreversed">
                [${bounding_box[0]}, y, ${bounding_box[1]}, ${bounding_box[2]}, ${vehicle.get_offsets(flipped=flipped[0])[repeat.bounding_box.index][0]}, ${vehicle.get_offsets(flipped=flipped[0])[repeat.bounding_box.index][1]} ${', ANIM' if consist.suppress_animated_pixel_warnings else ''}]
            </tal:sprite>
        }

        template spriteset_template_asymmetric_reversed_${vehicle.id}_${flipped[1]}(y) {
                //[left_x, upper_y, width, height, offset_x, offset_y]
            <tal:sprite repeat="bounding_box global_constants.spritesheet_bounding_boxes_asymmetric_reversed">
                [${bounding_box[0]}, y, ${bounding_box[1]}, ${bounding_box[2]}, ${vehicle.get_offsets(flipped=flipped[0])[repeat.bounding_box.index][0]}, ${vehicle.get_offsets(flipped=flipped[0])[repeat.bounding_box.index][1]} ${', ANIM' if consist.suppress_animated_pixel_warnings else ''}]
            </tal:sprite>
        }
    </tal:asymmetric>
    <tal:symmetric condition="vehicle.symmetry_type == 'symmetric'">
        template spriteset_template_symmetric_unreversed_${vehicle.id}_${flipped[1]}(y) {
                //[left_x, upper_y, width, height, offset_x, offset_y]
            <tal:sprite repeat="bounding_box global_constants.spritesheet_bounding_boxes_symmetric_unreversed">
                [${bounding_box[0]}, y, ${bounding_box[1]}, ${bounding_box[2]}, ${vehicle.get_offsets(flipped=flipped[0])[repeat.bounding_box.index][0]}, ${vehicle.get_offsets(flipped=flipped[0])[repeat.bounding_box.index][1]} ${', ANIM' if consist.suppress_animated_pixel_warnings else ''}]
            </tal:sprite>
        }

        <!--!
            template spriteset_template_symmetric_reversed is identical to spriteset_template_symmetric_reversed
            'symmetric unreversed' obvs. makes no sense in itself, but vehicle flip is used for silly livery hax
        -->
        template spriteset_template_symmetric_reversed_${vehicle.id}_${flipped[1]}(y) {
                //[left_x, upper_y, width, height, offset_x, offset_y]
            <tal:sprite repeat="bounding_box global_constants.spritesheet_bounding_boxes_symmetric_reversed">
                [${bounding_box[0]}, y, ${bounding_box[1]}, ${bounding_box[2]}, ${vehicle.get_offsets(flipped=flipped[0])[repeat.bounding_box.index][0]}, ${vehicle.get_offsets(flipped=flipped[0])[repeat.bounding_box.index][1]} ${', ANIM' if consist.suppress_animated_pixel_warnings else ''}]
            </tal:sprite>
        }
    </tal:symmetric>
</tal:user_flipped>

// buy menu spriteset template
template spriteset_template_purchase_${vehicle.id}(y) {
    //[left_x,  upper_y,    width,      height,     offset_x,      offset_y]
    [60,    10, 1, 1, 0, 0]
    [60,    10, 1, 1, 0, 0]
    [107,   10, 1, 1, 0, 0]
    [60,    10, 1, 1, 0, 0]
    [60,    10, 1, 1, 0, 0]
    [60,    10, 1, 1, 0, 0]
    // allow for buffers/couplings being 1px additional to the unit (they overlap in consists, but show in buy menu)
    [${consist.buy_menu_x_loc}, y, ${consist.buy_menu_width + 1}, 16, -${int(consist.buy_menu_width / 2)}, -11 ${', ANIM' if consist.suppress_animated_pixel_warnings else ''}]
    [60,    10, 1, 1, 0, 0]
}

