<!--! set spawn model -->
<!--! assumes just 2 effects, default and electrified, deal with that later if it's a problem later
      if necessary, walk over the array of effects and check each track type explicitly (get the labels via base_track_type_to_railtype_mapping)
-->
<tal:spawn_model_varies_by_railtype switch="vehicle.effects_vary_by_power_source">
    <tal:check_elrl case="True">
        switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_effect_spawn_model_and_powered, ${consist.get_nml_expression_for_tile_powers_railtype()}) {
                1: return ${vehicle.effects['electrified'][0]};
            return ${vehicle.effects['default'][0]};
        }
    </tal:check_elrl>
    <tal:default case="False">
        switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_effect_spawn_model_and_powered, 1) {
            return ${vehicle.effects['default'][0]};
        }
    </tal:default
</tal:spawn_model_varies_by_railtype>

<!--! create effect -->
<!--! complicated due to support for railtype changes AND randomly reversed variants -->
<tal:random_reverse_variants repeat="reversed_variant consist.reversed_variants">
    <tal:railtypes repeat="railtype vehicle.effects">
        <tal:effect define="effects vehicle.get_nml_expression_for_effects(reversed_variant, railtype)">
            switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_create_effect_${railtype}_${reversed_variant}, ${effects[0]}) {
                return ${effects[1]};
            }
        </tal:effect>
    </tal:railtypes>

    switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_create_effect_check_railtype_${reversed_variant}, ${consist.get_nml_expression_for_tile_powers_railtype()}) {
        <!--! assumes just 2 effects, default and electrified, deal with that later if it's a problem later -->
        <tal:effect_varies_by_railtype condition="vehicle.effects_vary_by_power_source">
            1: return ${vehicle.id}_switch_create_effect_electrified_${reversed_variant};
        </tal:effect_varies_by_railtype>
        return ${vehicle.id}_switch_create_effect_default_${reversed_variant};
    }
</tal:random_reverse_variants>

<tal:optional_random_reverse_variants condition="len(consist.reversed_variants) > 1">
    random_switch (FEAT_TRAINS, ${vehicle.location_of_random_bits_for_random_variant}, ${vehicle.id}_switch_create_effect_reversed_variants) {
        dependent: ${vehicle.id}_switch_graphics_vehicle;
        <tal:reversible_variants repeat="reversed_variant consist.reversed_variants">
            1: ${vehicle.id}_switch_create_effect_check_railtype_${reversed_variant};
        </tal:reversible_variants>
    }
</tal:optional_random_reverse_variants>

