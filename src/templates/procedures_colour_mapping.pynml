<!--! for random colour remapping  -->

<!--! as of Dec 2019 this is not used with articulated vehicles,
      however if articulated vehicle support is need it will need alternatives checking FORWARD_SELF(n)
      these will have to be duplicates of these switches on a repeat, with named entry points -->


<!--! note that there are 3 colours, but 4 random results, so switches weight to most pleasant colour in each case -->
switch (FEAT_TRAINS, SELF, switch_colour_scheme_random_blue_1cc_result, getbits(random_bits, 0, 2)) {
    0..1: return palette_2cc(COLOUR_BLUE, company_colour2);
    2: return palette_2cc(COLOUR_DARK_BLUE, company_colour2);
    3: return palette_2cc(COLOUR_LIGHT_BLUE, company_colour2);
}
switch (FEAT_TRAINS, SELF, switch_colour_scheme_random_blue_2cc_result, getbits(random_bits, 0, 2)) {
    0: return palette_2cc(company_colour1, COLOUR_LIGHT_BLUE);
    1..2: return palette_2cc(company_colour1, COLOUR_BLUE);
    3: return palette_2cc(company_colour1, COLOUR_DARK_BLUE);
}
switch (FEAT_TRAINS, SELF, switch_colour_scheme_random_green_1cc_result, getbits(random_bits, 0, 2)) {
    0: return palette_2cc(COLOUR_GREEN, company_colour2);
    1: return palette_2cc(COLOUR_DARK_GREEN, company_colour2);
    2..3: return palette_2cc(COLOUR_PALE_GREEN, company_colour2);
}
switch (FEAT_TRAINS, SELF, switch_colour_scheme_random_green_2cc_result, getbits(random_bits, 0, 2)) {
    0..1: return palette_2cc(company_colour1, COLOUR_PALE_GREEN);
    2: return palette_2cc(company_colour1, COLOUR_GREEN);
    3: return palette_2cc(company_colour1, COLOUR_DARK_GREEN);
}
switch (FEAT_TRAINS, SELF, switch_colour_scheme_random_red_1cc_result, getbits(random_bits, 0, 2)) {
    0: return palette_2cc(COLOUR_RED, company_colour2);
    1: return palette_2cc(COLOUR_CREAM, company_colour2);
    2..3: return palette_2cc(COLOUR_PINK, company_colour2);
}
switch (FEAT_TRAINS, SELF, switch_colour_scheme_random_red_2cc_result, getbits(random_bits, 0, 2)) {
    0..1: return palette_2cc(company_colour1, COLOUR_PINK);
    2: return palette_2cc(company_colour1, COLOUR_RED);
    3: return palette_2cc(company_colour1, COLOUR_RED);
}
switch (FEAT_TRAINS, SELF, switch_colour_scheme_random_yellow_1cc_result, getbits(random_bits, 0, 2)) {
    0..1: return palette_2cc(COLOUR_YELLOW, company_colour2);
    2: return palette_2cc(COLOUR_CREAM, company_colour2);
    3: return palette_2cc(COLOUR_ORANGE, company_colour2);
}
switch (FEAT_TRAINS, SELF, switch_colour_scheme_random_yellow_2cc_result, getbits(random_bits, 0, 2)) {
    0: return palette_2cc(company_colour1, COLOUR_CREAM);
    1: return palette_2cc(company_colour1, COLOUR_ORANGE);
    2..3: return palette_2cc(company_colour1, COLOUR_YELLOW);
}
switch (FEAT_TRAINS, SELF, switch_colour_scheme_random_grey_brown_1cc_result, getbits(random_bits, 0, 2)) {
    0..1: return palette_2cc(COLOUR_BROWN, company_colour2);
    2: return palette_2cc(COLOUR_GREY, company_colour2);
    3: return palette_2cc(COLOUR_CREAM, company_colour2);
}
switch (FEAT_TRAINS, SELF, switch_colour_scheme_random_grey_brown_2cc_result, getbits(random_bits, 0, 2)) {
    0: return palette_2cc(company_colour1, COLOUR_GREY);
    1: return palette_2cc(company_colour1, COLOUR_CREAM);
    2..3: return palette_2cc(company_colour1, COLOUR_BROWN);
}

<tal:legacy_code replace="nothing">
    0: return base_sprite_2cc + 16 * company_colour2 + company_colour1; <!--! apply regular 1CC and 2CC -->
    1: return base_sprite_2cc + 16 * company_colour1 + company_colour2; <!--! swap 1CC and 2CC -->
</tal:legacy_code>

<!--! take colour from parameter, either the 1cc or 2cc result will be used, depending on vehicle, switching both is not supported -->
switch (FEAT_TRAINS, SELF, switch_colour_scheme_1cc, param_wagon_colour_randomisation_strategy) {
    0: switch_colour_scheme_random_blue_1cc_result;
    1: switch_colour_scheme_random_green_1cc_result;
    2: switch_colour_scheme_random_red_1cc_result;
    3: switch_colour_scheme_random_yellow_1cc_result;
    4: switch_colour_scheme_random_grey_brown_1cc_result;
}
switch (FEAT_TRAINS, SELF, switch_colour_scheme_2cc, param_wagon_colour_randomisation_strategy) {
    0: switch_colour_scheme_random_blue_2cc_result;
    1: switch_colour_scheme_random_green_2cc_result;
    2: switch_colour_scheme_random_red_2cc_result;
    3: switch_colour_scheme_random_yellow_2cc_result;
    4: switch_colour_scheme_random_grey_brown_2cc_result;
}

<!--! is it 1cc or 2cc we're randomising (we don't support both because it's combinatorial silliness -->
<!--!switch (FEAT_TRAINS, SELF, switch_colour_mapping_1cc_or_2cc, LOAD_TEMP(0)) {
    1: return switch_randomise_1cc;
    2: return switch_randomise_2cc;
}-->

<!--! handle user flipped state -->
switch (FEAT_TRAINS, SELF, switch_colour_mapping, company_colour_to_randomise, [STORE_TEMP(company_colour_to_randomise, 0), vehicle_is_flipped]) {
    1: return base_sprite_2cc + 16 * company_colour2 + company_colour1; <!--! apply regular 1CC and 2CC -->
    return switch_colour_scheme_1cc;
}

switch (FEAT_TRAINS, SELF, switch_colour_mapping_purchase, company_colour_to_randomise, company_colour_to_randomise) {
    1: switch_colour_scheme_1cc;
    2: switch_colour_scheme_2cc;
}
