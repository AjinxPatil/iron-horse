${vehicle.render_debug_info()}

<!--! this is the default template for trains that don't supply their own template -->

<tal:include define="vehicle_offsets_standard load: vehicle_offsets_standard.pynml" metal:use-macro="vehicle_offsets_standard" />

<tal:sprites_random_variations repeat="variation_num python:range(vehicle.get_num_spritesets())">
    <tal:cargo_variants repeat="cargo_variant_num python:range(3)">
        spriteset(${vehicle.id}_ss_${variation_num}_${cargo_variant_num}, "src/graphics/${vehicle.id}_${variation_num}.png") {
          spriteset_template_${vehicle.id}(10 + ${cargo_variant_num * 30})
        }

        spritegroup ${vehicle.id}_sg_${variation_num}_${cargo_variant_num} {
            loaded:  [
                ${vehicle.id}_ss_${variation_num}_${cargo_variant_num},
            ];
            loading: [
                ${vehicle.id}_ss_${variation_num}_${cargo_variant_num},
            ];
        }
    </tal:cargo_variants>
    // always include a switch to get to spritegroups even if it does nothing - the random switches need to route to it
    switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics_${variation_num}, cargo_type_in_veh) {
        MILK: return ${vehicle.id}_sg_${variation_num}_2;
        return ${vehicle.id}_sg_${variation_num}_0;
    }
</tal:sprites_random_variations>

<tal:include define="graphics_random_switches load: graphics_random_switches.pynml" metal:use-macro="graphics_random_switches" />

// buy menu graphics
<tal:include define="vehicle_offsets_buy_menu load: vehicle_offsets_buy_menu.pynml" metal:use-macro="vehicle_offsets_buy_menu" />

spriteset(${vehicle.id}_ss_purchase, "src/graphics/${vehicle.id}_0.png") {
  spriteset_template_purchase_${vehicle.id}()
}

spritegroup ${vehicle.id}_sg_purchase {
    loaded:  [
        ${vehicle.id}_ss_purchase,
    ];
    loading: [
        ${vehicle.id}_ss_purchase,
    ];
}

${vehicle.render_cargo_capacity()}

${vehicle.render_properties()}
