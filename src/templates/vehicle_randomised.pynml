<!--! 'random_reverse' property is not supported in this template, vehicles using this template are almost all symmetrical, reversing would do nothing
      'flipped' is user flipping vehicle in depot and *is* supported here (used for livery selection tricks)
      don't conflate them :) -->

switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics_vehicle,
                            <!--! the picking from bit 4 is just a wild guess to try and make this independent from colour and weathering choices
                                  the lolz dict is to avoid working out how many bits to pick using actual programming skills -->
                            switch_alternative_var_random_bits(4, ${{2: 1, 4: 2, 8: 3}[len(consist.roster.get_wagon_randomisation_candidates(consist))]}
    )) {
    <tal:randomisation_candidates repeat="randomisation_candidate consist.roster.get_wagon_randomisation_candidates(consist)">
        ${repeat.randomisation_candidate.index}: ${randomisation_candidate.id}_switch_graphics_vehicle;
    </tal:randomisation_candidates>
}

// buy menu graphics chain
spriteset(${vehicle.id}_ss_purchase, "${graphics_path}${consist.id}.png") {
    ${consist.get_nml_for_spriteset_template(y_offset=0)}
}
<!--! purchase sprites always go through a switch in case the template does anything specific for purchase graphics
      when there is nothing specific, then this is just a null switch -->
switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics_purchase, 0) {
    return ${vehicle.id}_ss_purchase;
}

<tal:include metal:use-macro="load: graphics_switches.pynml" />

<tal:include metal:use-macro="load: capacity_switches.pynml" />

<tal:include metal:use-macro="load: properties_vehicle.pynml" />
