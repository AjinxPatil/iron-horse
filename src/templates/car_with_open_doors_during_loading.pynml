${vehicle.render_debug_info()}

<!--! this is the default template for trains that don't supply their own template -->

<tal:include metal:use-macro="load: vehicle_offsets_standard.pynml" />

<tal:sprites_random_variations repeat="variation_num python:range(consist.get_num_spritesets())">
    spriteset(${vehicle.id}_ss_moving_${variation_num}, "${global_constants.graphics_path}${consist.id}_${variation_num}.png") {
      spriteset_template_${vehicle.id}(10, ${vehicle.adjust_xoffs})
    }

    <tal:cargo_variants repeat="cargo_variant_num python:range(consist.num_cargo_rows)">
        spriteset(${vehicle.id}_ss_loading_1_${variation_num}_${cargo_variant_num}, "${global_constants.graphics_path}${consist.id}_${variation_num}.png") {
          spriteset_template_${vehicle.id}(40 + ${cargo_variant_num * 90}, ${vehicle.adjust_xoffs})
        }
        spriteset(${vehicle.id}_ss_loading_2_${variation_num}_${cargo_variant_num}, "${global_constants.graphics_path}${consist.id}_${variation_num}.png") {
          spriteset_template_${vehicle.id}(70 + ${cargo_variant_num * 90}, ${vehicle.adjust_xoffs})
        }
        spriteset(${vehicle.id}_ss_loading_3_${variation_num}_${cargo_variant_num}, "${global_constants.graphics_path}${consist.id}_${variation_num}.png") {
          spriteset_template_${vehicle.id}(100 + ${cargo_variant_num * 90}, ${vehicle.adjust_xoffs})
        }

        spritegroup ${vehicle.id}_sg_${variation_num}_${cargo_variant_num} {
            loaded:  [
                ${vehicle.id}_ss_moving_${variation_num},
            ];
            loading: [
                ${vehicle.id}_ss_loading_1_${variation_num}_${cargo_variant_num},
                ${vehicle.id}_ss_loading_2_${variation_num}_${cargo_variant_num},
                ${vehicle.id}_ss_loading_3_${variation_num}_${cargo_variant_num},
                ${vehicle.id}_ss_moving_${variation_num},
            ];
        }
    </tal:cargo_variants>

    <tal:cargo_random_switches repeat="mapping consist.cargo_graphics_mappings.items()">
        random_switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_random_cargo_graphics_${variation_num}_${mapping[0]}, bitmask(TRIGGER_VEHICLE_NEW_LOAD)) {
            <tal:random_graphics_variations repeat="spriterow_num mapping[1]">
                1: return ${vehicle.id}_sg_${variation_num}_${spriterow_num};
            </tal:random_graphics_variations>
        }
    </tal:cargo_random_switches>

    random_switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_random_cargo_graphics_${variation_num}_generic_cargos, bitmask(TRIGGER_VEHICLE_NEW_LOAD)) {
        <tal:random_graphics_variations repeat="spriterow_num consist.generic_cargo_rows">
            1: return ${vehicle.id}_sg_${variation_num}_${spriterow_num};
        </tal:random_graphics_variations>
    }

    switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics_${variation_num}, cargo_type_in_veh) {
        <tal:cargos repeat="mapping consist.cargo_graphics_mappings.items()">
            ${mapping[0]}: return ${vehicle.id}_switch_random_cargo_graphics_${variation_num}_${mapping[0]};
        </tal:cargos>
        return ${vehicle.id}_switch_random_cargo_graphics_${variation_num}_generic_cargos;
    }
</tal:sprites_random_variations>

<tal:include metal:use-macro="load: graphics_switches.pynml" />

// buy menu graphics
<tal:include metal:use-macro="load: vehicle_offsets_buy_menu.pynml" />

spriteset(${vehicle.id}_ss_purchase, "${global_constants.graphics_path}${consist.id}_0.png") {
  spriteset_template_purchase_${vehicle.id}()
}

spritegroup ${vehicle.id}_sg_purchase {
    loaded:  [
        ${vehicle.id}_ss_purchase,
    ];
    loading: [
        ${vehicle.id}_ss_purchase,
    ];
}

${vehicle.render_cargo_capacity()}

${vehicle.render_properties()}
