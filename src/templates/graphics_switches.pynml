<!--! !!! move spritesets to own templates when proven to work -->
spriteset(${vehicle.id}_ss_rear_light, "${global_constants.graphics_path}/rear_lights/24px.png") {
  spriteset_template_${vehicle.symmetry_type}_unreversed_${vehicle.id}_unflipped(10)
}

switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics_layer_vehicle, STORE_TEMP(CB_FLAG_MORE_SPRITES | PALETTE_USE_DEFAULT, 0x100)) {
    return ${vehicle.id}_switch_graphics_vehicle;
}
switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics_layer_rear_light, STORE_TEMP(PALETTE_USE_DEFAULT, 0x100)) {
    return ${vehicle.id}_ss_rear_light;
}

switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics_layers, getbits(extra_callback_info1, 8, 8)) {
    0: return ${vehicle.id}_switch_graphics_layer_vehicle;
    return ${vehicle.id}_switch_graphics_layer_rear_light;
}

<!--! only use layers if last vehicle in consist -->
switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics, position_in_consist_from_end) {
    0: return ${vehicle.id}_switch_graphics_layers;
    return ${vehicle.id}_switch_graphics_vehicle;
}

<!--! ############################# -->

<!--! for random colour remapping  -->
<tal:random_company_colour_swap condition="consist.random_company_colour_swap">
    random_switch (FEAT_TRAINS, ${vehicle.location_of_random_bits_for_random_variant}, ${vehicle.id}_switch_colour_mapping) {
        1: return base_sprite_2cc + 16 * company_colour2 + company_colour1; <!--! apply regular 1CC and 2CC -->
        1: return base_sprite_2cc + 16 * company_colour1 + company_colour2; <!--! swap 1CC and 2CC -->
    }
</tal:random_company_colour_swap>

