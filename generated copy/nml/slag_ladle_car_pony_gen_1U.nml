    spriteset(slag_ladle_car_pony_gen_1U_ss_empty_flipped, "generated/graphics/slag_ladle_car_pony_gen_1U.png") {
        spriteset_template_symmetric_unreversed_4_8_flipped(10,ANIM)
    }
    spriteset(slag_ladle_car_pony_gen_1U_ss_loading_0_flipped, "generated/graphics/slag_ladle_car_pony_gen_1U.png") {
        spriteset_template_symmetric_unreversed_4_8_flipped(40,ANIM)
    }
    spriteset(slag_ladle_car_pony_gen_1U_ss_loaded_0_flipped, "generated/graphics/slag_ladle_car_pony_gen_1U.png") {
        spriteset_template_symmetric_unreversed_4_8_flipped(70,ANIM)
    }
    spriteset(slag_ladle_car_pony_gen_1U_ss_empty_unflipped, "generated/graphics/slag_ladle_car_pony_gen_1U.png") {
        spriteset_template_symmetric_unreversed_4_8_unflipped(10,ANIM)
    }
    spriteset(slag_ladle_car_pony_gen_1U_ss_loading_0_unflipped, "generated/graphics/slag_ladle_car_pony_gen_1U.png") {
        spriteset_template_symmetric_unreversed_4_8_unflipped(40,ANIM)
    }
    spriteset(slag_ladle_car_pony_gen_1U_ss_loaded_0_unflipped, "generated/graphics/slag_ladle_car_pony_gen_1U.png") {
        spriteset_template_symmetric_unreversed_4_8_unflipped(70,ANIM)
    }
        switch (FEAT_TRAINS, SELF, slag_ladle_car_pony_gen_1U_switch_cargo_loading_unflipped, cargo_type_in_veh) {
            return slag_ladle_car_pony_gen_1U_ss_loading_0_unflipped;
        }
        switch (FEAT_TRAINS, SELF, slag_ladle_car_pony_gen_1U_switch_cargo_loading_flipped, cargo_type_in_veh) {
            return slag_ladle_car_pony_gen_1U_ss_loading_0_flipped;
        }
        switch (FEAT_TRAINS, SELF, slag_ladle_car_pony_gen_1U_switch_cargo_loaded_unflipped, cargo_type_in_veh) {
            return slag_ladle_car_pony_gen_1U_ss_loaded_0_unflipped;
        }
        switch (FEAT_TRAINS, SELF, slag_ladle_car_pony_gen_1U_switch_cargo_loaded_flipped, cargo_type_in_veh) {
            return slag_ladle_car_pony_gen_1U_ss_loaded_0_flipped;
        }
        switch (FEAT_TRAINS, SELF, slag_ladle_car_pony_gen_1U_switch_graphics_vehicle, switch_graphics_visible_cargo_no_cover_flip_and_load()) {
            0: return slag_ladle_car_pony_gen_1U_ss_empty_unflipped;
            1: return slag_ladle_car_pony_gen_1U_switch_cargo_loading_unflipped;
            2: return slag_ladle_car_pony_gen_1U_switch_cargo_loaded_unflipped;
            3: return slag_ladle_car_pony_gen_1U_ss_empty_flipped;
            4: return slag_ladle_car_pony_gen_1U_switch_cargo_loading_flipped;
            5: return slag_ladle_car_pony_gen_1U_switch_cargo_loaded_flipped;
        }
// buy menu graphics chain
spriteset(slag_ladle_car_pony_gen_1U_ss_purchase, "generated/graphics/slag_ladle_car_pony_gen_1U.png") {
    spriteset_template_purchase_default(224,10,17,-8,ANIM)
}
switch (FEAT_TRAINS, SELF, slag_ladle_car_pony_gen_1U_switch_graphics_purchase, 0) {
    return slag_ladle_car_pony_gen_1U_ss_purchase;
}
switch (FEAT_TRAINS, SELF, slag_ladle_car_pony_gen_1U_switch_set_layers_register_more_sprites, STORE_TEMP(CB_FLAG_MORE_SPRITES | PALETTE_USE_DEFAULT, 0x100)) {
    return slag_ladle_car_pony_gen_1U_switch_graphics_vehicle;
}
switch (FEAT_TRAINS, SELF, slag_ladle_car_pony_gen_1U_switch_graphics, getbits(extra_callback_info1, 8, 8)) {
    0: return slag_ladle_car_pony_gen_1U_switch_set_layers_register_more_sprites;
    return switch_graphics_layer_tail_light_16px;
}
switch (FEAT_TRAINS, SELF, slag_ladle_car_pony_gen_1U_switch_cargo_capacity,
        [STORE_TEMP(22, 0), STORE_TEMP(32, 1), STORE_TEMP(43, 2), STORE_TEMP(57, 3)]) {
    return switch_cargo_capacity();
}
        switch (FEAT_TRAINS, PARENT, slag_ladle_car_pony_gen_1U_switch_running_cost_factor, 1) {
            return 89;
        }
item(FEAT_TRAINS, slag_ladle_car_pony_gen_1U, 4030) {
    property {
        name:                           string(STR_NAME_CONSIST_PLAIN, string(STR_NAME_SUFFIX_SLAG_LADLE_CAR));
        climates_available:             NO_CLIMATE; // nml constant
        engine_class:                   ENGINE_CLASS_STEAM;
        introduction_date:              date(1860, 1, 1);
        cargo_capacity:                 32;
        sprite_id:                      SPRITE_ID_NEW_TRAIN; //enable new graphics - nml constant
        power:                          0hp;
            speed:                          35mph;
        weight:                         32ton;
        tractive_effort_coefficient:    0.3;
        cost_factor:                    0; // use the CB to set this, the prop is capped to max 255, cb is 32k
        running_cost_base:              RUNNING_COST_DIESEL;
        running_cost_factor:            0; // use the CB to set this, the prop is capped to max 255, cb is 32k
        refit_cost:                     0; // btw this needs to be 0 if we want autorefit without using cb
        refittable_cargo_classes:       bitmask();
        non_refittable_cargo_classes:   bitmask(); // don't set non-refittable classes, increases likelihood of breaking cargo support
        cargo_allow_refit:              [SLAG];
        cargo_disallow_refit:           [];
            default_cargo_type:             SLAG;
        misc_flags:                     bitmask(TRAIN_FLAG_2CC,TRAIN_FLAG_SPRITE_STACK,TRAIN_FLAG_FLIP,TRAIN_FLAG_AUTOREFIT); // nml constants
        model_life:                     100;
        retire_early:                   -10;
        reliability_decay:              20; // default value
        vehicle_life:                   40;
        length:                         4;
        track_type:                     RAIL;
        effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_NONE; // default to none to suppress effects, set in cb as needed
    }
    graphics {
        default:                        slag_ladle_car_pony_gen_1U_switch_graphics;
        purchase:                       slag_ladle_car_pony_gen_1U_switch_graphics_purchase;
        cost_factor:                    34; // CB used as it is capped to max 32k, prop is only 255
        running_cost_factor:            slag_ladle_car_pony_gen_1U_switch_running_cost_factor; // CB should be used even for static running costs as it is capped to max 32k, prop is only 255
        purchase_running_cost_factor:   89; // purchase set separately to prevent unreliable results from trying to access non-available vars for variable run costs
                colour_mapping:                 switch_colour_mapping(1, 0, 1);
                purchase_colour_mapping:        switch_colour_mapping_purchase(1, 0, 1);
            cargo_capacity:                 slag_ladle_car_pony_gen_1U_switch_cargo_capacity;
            purchase_cargo_capacity:        slag_ladle_car_pony_gen_1U_switch_cargo_capacity;
            loading_speed:                  10;
    }
}
    if (param[1]==0 && param_simplified_gameplay==0) {
        item(FEAT_TRAINS, slag_ladle_car_pony_gen_1U, 4030) {
            property {
                climates_available:             ALL_CLIMATES;
            }
        }
    }